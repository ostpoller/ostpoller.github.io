[{"content":"The terminal in PyCharm Community Edition 2020.1 throws a \u0026ldquo;Cannot open local terminal\u0026rdquo; error. To fix the error, re-compile libpty.so for the 64bit ARM architecture and the Raspbian \u0026ldquo;Buster\u0026rdquo; operating system.\n/opt/pycharm-community-2020.1/lib/pty4j-native/linux/x86/libpty.so\nis not compiled for AARCH64 (64bit ARM) and must be exchanged against\na natively compiled one:\n Clone https://github.com/JetBrains/pty4j.git In directory pty4j/native compile like shown:  gcc -fPIC -c *.c gcc -shared -o libpty.so *.o Copy the newly compiled libpty.so to\n/opt/pycharm-community-2020.1/lib/pty4j-native/linux/x86/libpty.so    ","description":"The terminal in PyCharm Community Edition 2020.1 throws a \"Cannot open local terminal\" error. To fix the error, re-compile libpty.so for the 64bit ARM architecture and the Raspbian \"Buster\" operating system.","id":0,"section":"posts","tags":["rpi","pycharm"],"title":"Fixing PyCharm Terminal on RPi4","uri":"https://ostpoller.github.io/en/posts/20210103_fixing-pycharm-on-rpi4/"},{"content":"Ben is drawing with pen on paper. The images have been scanned in \u0026hellip;\nCopyright ©️ Ben Westphal, 2021\n","description":"Ben's Graffiti Gallery","id":1,"section":"gallery","tags":null,"title":"Ben's Graffiti","uri":"https://ostpoller.github.io/en/gallery/ben/"},{"content":"In the past I have used several systems to keep notes for my references. I ended up in a mess because I generated and kept notes in various ways for my private projects as well as for my work projects - often overlapping, often in systems that could not easily exchange data. Further, the company I work for does not allow data-synchronization between systems we use at work and our private devices regardless whether the data is classified or not.\nSo, I looked around for a solution to write up unclassified notes that I wanted to keep for my own reference and that I could read and write from any device with an internet connection be it at work or at home.\nI want to write the articles and posts in a common mark-up language, like Markdown or ReStructuredText and not in HTML, a specific WIKI language or a WYSIWYG editor. The reason for this is, that I wanted maximum flexibility and interoperability:\n convert via Pandoc to stand-alone HTML, LATEX or PDF copy to and from project documentation like README.md files or the Sphinx documentation system bring it to other static site generators like Jekyll or Docusaurus (both used at work via gh-pages) read/write in a note taking system like Joplin etc.  GitHub - Source Code Repository All sources will be located in a private GitHub repo.\nHugo - Static Site Generation from MarkDown Files Through jamstack.org I got to know about Hugo, a static site generator writtin in Go. It is easy to install and has plenty of themes (site templates) to start developing your own website style from (this site has been build by adapting the Zzo theme).\nHugo ticks the boxes for writing the articles in Markdown and generating all necessary HTML, CSS and JS for an appealing and responsive web site.\nThe Github repo will be cloned to my private machines where I will be able to preview the site with the hugo server --disableFastRender command.\nInitially, the site is built with the command rm -rf public \u0026amp;\u0026amp; hugo. This command will render the site into the public directory, from where it can be copied or pushed to a server.\nGH-Pages - Serving the Static Site Initially, the freshly rendered site will be pushed to a repo where it will be served as a gh-pages.\nThe problem here is that the repo has to be public for the gh-pages to be served plus I need access to one of my machines where the hugo build tools and git are installed. This does not really tick my box on \u0026lsquo;write on any device with internet access\u0026rsquo;. So, in the future I will change the system.\nNetlify - Build and Serve the Site As far as I can tell right now Netlify is able to connect to a private Github repo and provides a build pipeline for Hugo that gets launched via a webhook when a new commit/push is detected. Finally it serves the freshly generated site.\nThis will then allow me to write articles anywhere (via accessing and committing the source code repo through a browser). Site generation and deployment is then happening at Netlify. This is my target setup but is still a little in the future\u0026hellip;\nFurther instructions: Hosting on Netlify.\n","description":"The first post on the new site, explaining what this site (ostpoller) will be about.","id":2,"section":"posts","tags":[""],"title":"Ostpoller Meta","uri":"https://ostpoller.github.io/en/posts/20210101_ostpoller-meta/"},{"content":"About the website - Ostpoller Ostpoller is a website with posts and articles around programming and software design mostly for my own usage and reference. Maybe, somebody else finds it useful \u0026hellip;\nAbout me - Philipp WESTPHAL I am a structural/mechanical engineer living and working in the greater area of Hamburg, Germany.\nAlso, I am a self-taught programmer and software developer, merging those skill sets as much as possible in my daily work as an (structural) stress engineer at Airbus.\nWhen I am not performing (numerical) assembly simulation for aircraft structure components, I am developing a microservice-based environment to host usefull engineering services mostly related, but not limited, to airframe structures.\nProfessional Career After school and mandatory civil service in 1995, I followed an 2.5 year apprenticeship to qualify as a professional boatbuilder at Rathje Werft, Kiel-Friedrichsort, Germany.\nIn 1998, after working for a few months as a boatbuilder, I moved to Southampton, UK, and studied Yacht \u0026amp; Powercraft Design at the Southampton Institute of Higher Education, nowadays Solent University, from where I graduated 3 years later with a 1st Class Honours Degree in Bachelor of Engineering.\nDuring the first 5 years after university, I worked as a structural designer and analyst for a UK-based company in Southampton producing Epoxy resins and pre-preg materials for the marine and wind energy market, SP Systems/SP Technologies, nowadays Gurit. My tasks were focused on designing, analysing and supervising the construction of the load-carrying structure of large and high performance sailing craft. This included\n luxury sailing yachts greater than 115ft, off-shore racing yachts (Maxi yacht), in-shore racing yachts (IACC 2007 America\u0026rsquo;s Cup yacht).  During my time at SP Technologies (2001-2006), I was seconded to Australia (Sydney, Northern Beaches) for one year to contribute in the hiring and training of local engineers for the company\u0026rsquo;s branch in Australia.\nJoining Airbus in Hamburg, Germany, in 2006, I participated in\n the resarch for industrial use of composite materials in the construction of large civil aircraft, the specific design work (sizing and certification) of primary structures for the composite aircraft A350, the development of structure analysis tools for sizing and for certification purposes.  Today at Airbus, most of my effort is concentrated on\n the (numerical, finite element based) simulation of manufacturing processes (mostly assembly), the continuous effort to digital transformation (development of a microservice-based environment).  Interests I do some basic electronic tinkering as well as setting up and maintaining my home network, private cloud server, various single-board-computer projects and Python coding projects. I currently dip my toes into low-level C programming.\nI like to go cycling and hiking in the great outdoors.\nContact  philipp dot westphal at gmx dot net  Disclaimer I take no responsibility for the content of external links. For the content of the linked pages, their operators are responsible, exclusively.\n","description":"Ostpoller, a website with posts and articles mostly for my own usage and reference. Maybe, somebody else finds it useful...","id":3,"section":"","tags":null,"title":"About","uri":"https://ostpoller.github.io/en/about/"}]