<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Ostpoller</title>
    <link>https://ostpoller.github.io/en/</link>
    <description>Recent content on Ostpoller</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>philipp.westphal@gmx.net (Philipp Westphal)</managingEditor>
    <webMaster>philipp.westphal@gmx.net (Philipp Westphal)</webMaster>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Sat, 16 Jan 2021 15:00:00 +0100</lastBuildDate>
    
        <atom:link href="https://ostpoller.github.io/en/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      

      
      <item>
        <title>Pubsub with Redis &amp; Redis-py</title>
        <link>https://ostpoller.github.io/en/posts/20210116_redis-py_pubsub/</link>
        <pubDate>Sat, 16 Jan 2021 15:00:00 +0100</pubDate>
        <author>philipp.westphal@gmx.net (Philipp Westphal)</author>
        <atom:modified>Sat, 16 Jan 2021 15:00:00 +0100</atom:modified>
        <guid>https://ostpoller.github.io/en/posts/20210116_redis-py_pubsub/</guid>
        <description>Pre-requisites Redis Server Redis can be installed directly on the machine by following this
installation guidelines by DigitalOcean.
However, for the examples shown here, I run the Redis server in a Docker container.
In case a system wide instance redis-server is running already shut it down first to avoid port conflicts:
1  $ /etc/init.d/redis-server stop   1 2 3 4 5 6 7  FROMredis:5.0.9-alpineCOPY redis.conf /etc/redis.confRUN chmod 777 /etc/redis.</description>
        
        <dc:creator>Philipp Westphal</dc:creator>
        <media:content url="https://ostpoller.github.io/images/appicons/redis-py.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>redis</category>
            
          
            
              <category>redis-py</category>
            
          
        
        
          
            
              <category>python snippets</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>Emacs Commands &amp; Configuration</title>
        <link>https://ostpoller.github.io/en/posts/20210113_emacs/</link>
        <pubDate>Wed, 13 Jan 2021 15:00:00 +0100</pubDate>
        <author>philipp.westphal@gmx.net (Philipp Westphal)</author>
        <atom:modified>Wed, 13 Jan 2021 15:00:00 +0100</atom:modified>
        <guid>https://ostpoller.github.io/en/posts/20210113_emacs/</guid>
        <description>NOTE:
This document is very much a live document and will get updated frequently. Commands Files    Command Description     ctrl-x ctrl-f open file: find and open file   ctrl-x ctrl-s save file: save buffer in active window back to file on disk    Buffers    Command Description     ctrl-x b open buffer: open buffer in active window   ctrl-x k kill buffer: kill buffer and remove it from its window    Windows    Command Description     ctrl-x o switch window: activate another window (when frame is split in multiple windows        </description>
        
        <dc:creator>Philipp Westphal</dc:creator>
        <media:content url="https://ostpoller.github.io/images/appicons/emacs.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>emacs</category>
            
          
            
          
        
        
          
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>Python subprocess</title>
        <link>https://ostpoller.github.io/en/posts/20210113_python_subprocess/</link>
        <pubDate>Wed, 13 Jan 2021 10:00:00 +0100</pubDate>
        <author>philipp.westphal@gmx.net (Philipp Westphal)</author>
        <atom:modified>Wed, 13 Jan 2021 10:00:00 +0100</atom:modified>
        <guid>https://ostpoller.github.io/en/posts/20210113_python_subprocess/</guid>
        <description>The subprocess Module 1 2 3 4 5 6 7 8 9 10  import subprocess process = subprocess.Popen( [&amp;#34;executable&amp;#34;, &amp;#34;arg1&amp;#34;, &amp;#34;arg2&amp;#34;, ..., &amp;#34;argn&amp;#34;], # must be strings or pathlib.Path-like objects (with string representation) cwd=work_dir, # path to executable is always relative to cwd; executable is launched with cwd as working directory  stdout=subprocess.PIPE, stderr=subprocess.PIPE ) stdout, stderr = process.communicate() exit_code = process.returncode   Examples 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49  import subprocess from pathlib import Path def execute_binary(executable, arguments=[], work_dir=&amp;#39;.</description>
        
        <dc:creator>Philipp Westphal</dc:creator>
        <media:content url="https://ostpoller.github.io/images/appicons/python.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>python</category>
            
          
            
              <category>subprocess</category>
            
          
        
        
          
            
              <category>python snippets</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>A Python Class Template</title>
        <link>https://ostpoller.github.io/en/posts/20210106_python_class_template/</link>
        <pubDate>Wed, 06 Jan 2021 12:00:00 +0100</pubDate>
        <author>philipp.westphal@gmx.net (Philipp Westphal)</author>
        <atom:modified>Wed, 06 Jan 2021 12:00:00 +0100</atom:modified>
        <guid>https://ostpoller.github.io/en/posts/20210106_python_class_template/</guid>
        <description>Class Definition 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52  # mymodule.py class MyParentClass: &amp;#34;&amp;#34;&amp;#34;A (parent) class to inherit from.&amp;#34;&amp;#34;&amp;#34; def __init__(self, parent_arg): print(f&amp;#34;Parent class constructor has been called with this argument: {parent_arg}&amp;#34;) class MyClass(MyParentClass): &amp;#34;&amp;#34;&amp;#34;Template class.</description>
        
        <dc:creator>Philipp Westphal</dc:creator>
        <media:content url="https://ostpoller.github.io/images/appicons/python.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>class</category>
            
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>python snippets</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>Sourcetrail - Source Code Inspection and Visualization</title>
        <link>https://ostpoller.github.io/en/posts/20210105_sourcetrail/</link>
        <pubDate>Tue, 05 Jan 2021 13:00:00 +0100</pubDate>
        <author>philipp.westphal@gmx.net (Philipp Westphal)</author>
        <atom:modified>Tue, 05 Jan 2021 13:00:00 +0100</atom:modified>
        <guid>https://ostpoller.github.io/en/posts/20210105_sourcetrail/</guid>
        <description>Installation Select the link for your version and target platform from Github CoatiSoftare Sourcetrail, download extract it and run install.sh:
1 2 3 4 5  $ cd ~/Downloads $ wget https://github.com/CoatiSoftware/Sourcetrail/releases/download/2020.2.43/Sourcetrail_2020_2_43_Linux_64bit.tar.gz $ tar -xvf Sourcetrail_2020_2_43_Linux_64bit.tar.gz $ cd Sourcetrail $ sudo ./install.sh   This will install Sourcetrail to /opt/sourcetrail/ and makes the command sourcetrail to start the application available via /usr/bin/sourcetrail
1 2 3 4  $ sourcetrail 12:52:36 | LogManager.</description>
        
        <dc:creator>Philipp Westphal</dc:creator>
        <media:content url="https://ostpoller.github.io/images/appicons/sourcetrail.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>sourcetrail</category>
            
          
        
        
          
            
              <category>code inspection</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>Syntax in Markdown Source Files for Hugo</title>
        <link>https://ostpoller.github.io/en/posts/20210104_markdown_in_hugo/</link>
        <pubDate>Mon, 04 Jan 2021 16:00:00 +0100</pubDate>
        <author>philipp.westphal@gmx.net (Philipp Westphal)</author>
        <atom:modified>Mon, 04 Jan 2021 16:00:00 +0100</atom:modified>
        <guid>https://ostpoller.github.io/en/posts/20210104_markdown_in_hugo/</guid>
        <description>Text Boxes &amp;hellip; &amp;hellip; via Blockquote 1  &amp;gt; **_NOTE:_** The note content.    NOTE: The note content.
 &amp;hellip; via Horizontal Lines 1 2 3 4 5  --- **_NOTE:_** It works with almost all markdown flavours (the below blank line matters). ---   NOTE:
It works with almost all markdown flavours (the below blank line matters).
&amp;hellip; via Bodyless Table 1 2  |![](/images/icons/info-96.png) | This is something I want you to notice.</description>
        
        <dc:creator>Philipp Westphal</dc:creator>
        <media:content url="https://ostpoller.github.io/images/icons/markdown.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>hugo</category>
            
          
            
              <category>markdown</category>
            
          
        
        
          
            
              <category>ostpoller meta</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>Emojis in Google Chrome</title>
        <link>https://ostpoller.github.io/en/posts/20210104_emojis_in_chrome/</link>
        <pubDate>Mon, 04 Jan 2021 14:00:00 +0100</pubDate>
        <author>philipp.westphal@gmx.net (Philipp Westphal)</author>
        <atom:modified>Mon, 04 Jan 2021 14:00:00 +0100</atom:modified>
        <guid>https://ostpoller.github.io/en/posts/20210104_emojis_in_chrome/</guid>
        <description>1  $ sudo apt reinstall fonts-noto-color-emoji   Restart Chrome after installing the font.</description>
        
        <dc:creator>Philipp Westphal</dc:creator>
        <media:content url="https://ostpoller.github.io/images/emojis/hello-x96.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>emojis</category>
            
          
            
              <category>chrome</category>
            
          
            
              <category>fonts</category>
            
          
        
        
          
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>Build &amp; Preview Static Web Site with Hugo</title>
        <link>https://ostpoller.github.io/en/posts/20210104_build_and_preview_with_hugo/</link>
        <pubDate>Mon, 04 Jan 2021 12:00:00 +0100</pubDate>
        <author>philipp.westphal@gmx.net (Philipp Westphal)</author>
        <atom:modified>Mon, 04 Jan 2021 12:00:00 +0100</atom:modified>
        <guid>https://ostpoller.github.io/en/posts/20210104_build_and_preview_with_hugo/</guid>
        <description>To build and preview the site locally use the server bundled with Hugo:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  $ cd /path/to/hugo/project $ hugo server --disableFastRender Start building sites … | EN | DE -------------------+-----+------ Pages | 49 | 24 Paginator pages | 0 | 0 Non-page files | 0 | 0 Static files | 124 | 124 Processed images | 0 | 0 Aliases | 15 | 7 Sitemaps | 2 | 1 Cleaned | 0 | 0 Built in 943 ms Watching for changes in /path/to/hugo/project/{content,layouts,static,themes} Watching for config changes in path/to/hugo/project/config/_default Environment: &amp;#34;development&amp;#34; Serving pages from memory Web Server is available at http://localhost:1313/ (bind address 127.</description>
        
        <dc:creator>Philipp Westphal</dc:creator>
        <media:content url="https://ostpoller.github.io/images/hugo/hugo.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>hugo</category>
            
          
            
              <category>static site generator</category>
            
          
        
        
          
            
              <category>ostpoller meta</category>
            
          
            
              <category>static site generator</category>
            
          
            
              <category>jamstack</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>Installing Hugo</title>
        <link>https://ostpoller.github.io/en/posts/20210104_install_hugo/</link>
        <pubDate>Mon, 04 Jan 2021 10:00:00 +0100</pubDate>
        <author>philipp.westphal@gmx.net (Philipp Westphal)</author>
        <atom:modified>Mon, 04 Jan 2021 10:00:00 +0100</atom:modified>
        <guid>https://ostpoller.github.io/en/posts/20210104_install_hugo/</guid>
        <description>Source: Hugo &amp;gt; Getting Started &amp;gt; Installing
This web site is generated by Hugo.
Installing Hugo on Linux is as simple as dowloading a binary in a tarball, extracting it and make it available on the searchpath ($PATH).
  Select a version and the platform architecture to install from the Hugo&amp;rsquo;s releases web page
  Download the tarball:
1 2  $ cd ~/Downloads $ wget https://github.com/gohugoio/hugo/releases/download/v0.80.0/hugo_0.80.0_Linux-64bit.tar.gz     Unpack the tarball:</description>
        
        <dc:creator>Philipp Westphal</dc:creator>
        <media:content url="https://ostpoller.github.io/images/hugo/hugo.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>hugo</category>
            
          
            
              <category>static site generator</category>
            
          
        
        
          
            
              <category>ostpoller meta</category>
            
          
            
              <category>static site generator</category>
            
          
            
              <category>jamstack</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>Renaming Git Branches</title>
        <link>https://ostpoller.github.io/en/posts/20210103_renaming_git_branch/</link>
        <pubDate>Sun, 03 Jan 2021 15:00:00 +0100</pubDate>
        <author>philipp.westphal@gmx.net (Philipp Westphal)</author>
        <atom:modified>Sun, 03 Jan 2021 15:00:00 +0100</atom:modified>
        <guid>https://ostpoller.github.io/en/posts/20210103_renaming_git_branch/</guid>
        <description>The following commands show how to rename the &amp;ldquo;master&amp;rdquo; branch to &amp;ldquo;main&amp;rdquo;. This is only an example and is equally valid for any other branch. Just replace the names &amp;ldquo;master&amp;rdquo; and &amp;ldquo;main&amp;rdquo; accordingly.
1 2 3 4 5 6 7 8  # cd into the local repo: $ cd /path/to/local/repo # switch to the &amp;#34;master&amp;#34; branch: $ git checkout master # rename it to &amp;#34;main&amp;#34;: $ git branch -m master main   The previous code renames the &amp;ldquo;master&amp;rdquo; branch in your local repo.</description>
        
        <dc:creator>Philipp Westphal</dc:creator>
        <media:content url="https://ostpoller.github.io/images/git/git.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>git</category>
            
          
            
              <category>github</category>
            
          
        
        
          
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>Fixing PyCharm Terminal on RPi4</title>
        <link>https://ostpoller.github.io/en/posts/20210103_fixing-pycharm-on-rpi4/</link>
        <pubDate>Sun, 03 Jan 2021 13:00:00 +0100</pubDate>
        <author>philipp.westphal@gmx.net (Philipp Westphal)</author>
        <atom:modified>Sun, 03 Jan 2021 13:00:00 +0100</atom:modified>
        <guid>https://ostpoller.github.io/en/posts/20210103_fixing-pycharm-on-rpi4/</guid>
        <description>The terminal in PyCharm Community Edition 2020.1 throws a &amp;ldquo;Cannot open local terminal&amp;rdquo; error. To fix the error, re-compile libpty.so for the 64bit ARM architecture and the Raspbian &amp;ldquo;Buster&amp;rdquo; operating system.
/opt/pycharm-community-2020.1/lib/pty4j-native/linux/x86/libpty.so
is not compiled for AARCH64 (64bit ARM) and must be exchanged against
a natively compiled one:
 Clone https://github.com/JetBrains/pty4j.git In directory pty4j/native compile like shown:  gcc -fPIC -c *.c gcc -shared -o libpty.so *.o Copy the newly compiled libpty.</description>
        
        <dc:creator>Philipp Westphal</dc:creator>
        <media:content url="https://ostpoller.github.io/images/raspberrypi/raspberry.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>rpi</category>
            
          
            
              <category>pycharm</category>
            
          
        
        
          
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>Ostpoller Meta</title>
        <link>https://ostpoller.github.io/en/posts/20210101_ostpoller-meta/</link>
        <pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate>
        <author>philipp.westphal@gmx.net (Philipp Westphal)</author>
        <atom:modified>Fri, 01 Jan 2021 00:00:00 +0000</atom:modified>
        <guid>https://ostpoller.github.io/en/posts/20210101_ostpoller-meta/</guid>
        <description>In the past I have used several systems to keep notes for my references. I ended up in a mess because I generated and kept notes in various ways for my private projects as well as for my work projects - often overlapping, often in systems that could not easily exchange data. Further, the company I work for does not allow data-synchronization between systems we use at work and our private devices regardless whether the data is classified or not.</description>
        
        <dc:creator>Philipp Westphal</dc:creator>
        <media:content url="https://ostpoller.github.io/images/ostpoller/logo-192-blue-black.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
          
        
        
          
            
              <category>ostpoller meta</category>
            
          
        
        
          
            
          
        
      </item>
      

    
  </channel>
</rss>