<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>python snippets on Ostpoller</title>
    <link>https://ostpoller.github.io/en/categories/python-snippets/</link>
    <description>Recent content in python snippets on Ostpoller</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>philipp.westphal@gmx.net (Philipp Westphal)</managingEditor>
    <webMaster>philipp.westphal@gmx.net (Philipp Westphal)</webMaster>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Sat, 16 Jan 2021 15:00:00 +0100</lastBuildDate>
    
        <atom:link href="https://ostpoller.github.io/en/categories/python-snippets/index.xml" rel="self" type="application/rss+xml" />
    
    
    

      
      <item>
        <title>A Python Class Template</title>
        <link>https://ostpoller.github.io/en/posts/20210116_redis-py_pubsub/</link>
        <pubDate>Sat, 16 Jan 2021 15:00:00 +0100</pubDate>
        <author>philipp.westphal@gmx.net (Philipp Westphal)</author>
        <atom:modified>Sat, 16 Jan 2021 15:00:00 +0100</atom:modified>
        <guid>https://ostpoller.github.io/en/posts/20210116_redis-py_pubsub/</guid>
        <description>Pre-requisites Redis Server Redis can be installed directly on the machine by following this
installation guidelines by DigitalOcean.
However, for the examples shown here, I run the Redis server in a Docker container.
In case a system wide instance redis-server is running already shut it down first to avoid port conflicts:
1  $ /etc/init.d/redis-server stop   1 2 3 4 5 6 7  FROMredis:5.0.9-alpineCOPY redis.conf /etc/redis.confRUN chmod 777 /etc/redis.</description>
        
        <dc:creator>Philipp Westphal</dc:creator>
        <media:content url="https://ostpoller.github.io/images/appicons/redis-py.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>redis</category>
            
          
            
              <category>redis-py</category>
            
          
        
        
          
            
              <category>python snippets</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>Python subprocess</title>
        <link>https://ostpoller.github.io/en/posts/20210113_python_subprocess/</link>
        <pubDate>Wed, 13 Jan 2021 10:00:00 +0100</pubDate>
        <author>philipp.westphal@gmx.net (Philipp Westphal)</author>
        <atom:modified>Wed, 13 Jan 2021 10:00:00 +0100</atom:modified>
        <guid>https://ostpoller.github.io/en/posts/20210113_python_subprocess/</guid>
        <description>The subprocess Module 1 2 3 4 5 6 7 8 9 10  import subprocess process = subprocess.Popen( [&amp;#34;executable&amp;#34;, &amp;#34;arg1&amp;#34;, &amp;#34;arg2&amp;#34;, ..., &amp;#34;argn&amp;#34;], # must be strings or pathlib.Path-like objects (with string representation) cwd=work_dir, # path to executable is always relative to cwd; executable is launched with cwd as working directory  stdout=subprocess.PIPE, stderr=subprocess.PIPE ) stdout, stderr = process.communicate() exit_code = process.returncode   Examples 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49  import subprocess from pathlib import Path def execute_binary(executable, arguments=[], work_dir=&amp;#39;.</description>
        
        <dc:creator>Philipp Westphal</dc:creator>
        <media:content url="https://ostpoller.github.io/images/appicons/python.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>python</category>
            
          
            
              <category>subprocess</category>
            
          
        
        
          
            
              <category>python snippets</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>A Python Class Template</title>
        <link>https://ostpoller.github.io/en/posts/20210106_python_class_template/</link>
        <pubDate>Wed, 06 Jan 2021 12:00:00 +0100</pubDate>
        <author>philipp.westphal@gmx.net (Philipp Westphal)</author>
        <atom:modified>Wed, 06 Jan 2021 12:00:00 +0100</atom:modified>
        <guid>https://ostpoller.github.io/en/posts/20210106_python_class_template/</guid>
        <description>Class Definition 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52  # mymodule.py class MyParentClass: &amp;#34;&amp;#34;&amp;#34;A (parent) class to inherit from.&amp;#34;&amp;#34;&amp;#34; def __init__(self, parent_arg): print(f&amp;#34;Parent class constructor has been called with this argument: {parent_arg}&amp;#34;) class MyClass(MyParentClass): &amp;#34;&amp;#34;&amp;#34;Template class.</description>
        
        <dc:creator>Philipp Westphal</dc:creator>
        <media:content url="https://ostpoller.github.io/images/appicons/python.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>class</category>
            
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>python snippets</category>
            
          
        
        
          
            
          
        
      </item>
      

    
  </channel>
</rss>